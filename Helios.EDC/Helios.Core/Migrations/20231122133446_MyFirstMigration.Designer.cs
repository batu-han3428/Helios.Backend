// <auto-generated />
using System;
using Helios.Core.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Helios.Core.Migrations
{
    [DbContext(typeof(CoreContext))]
    [Migration("20231122133446_MyFirstMigration")]
    partial class MyFirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_turkish_ci")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4", DelegationModes.ApplyToAll);

            modelBuilder.Entity("Helios.Core.Domains.Entities.Element", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("CanMissing")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ElementDetailId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ElementName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ElementType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDependent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsReadonly")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsTitleHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<byte>("Width")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("ElementDetailId")
                        .IsUnique();

                    b.HasIndex("ModuleId");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.ElementDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("AddTodayDate")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("ButtonText")
                        .HasColumnType("longtext");

                    b.Property<bool>("CanComment")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanDataEntry")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanQuery")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanRemoteSdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ColunmIndex")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("longtext");

                    b.Property<int>("EProPageNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("ElementId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ElementOptions")
                        .HasColumnType("longtext");

                    b.Property<int>("EndDay")
                        .HasColumnType("int");

                    b.Property<int>("EndMonth")
                        .HasColumnType("int");

                    b.Property<int>("EndYear")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte>("Layout")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("LeftText")
                        .HasColumnType("longtext");

                    b.Property<string>("LowerLimit")
                        .HasColumnType("longtext");

                    b.Property<string>("Mask")
                        .HasColumnType("longtext");

                    b.Property<string>("MetaDataTags")
                        .HasColumnType("longtext");

                    b.Property<int>("ParentElementEProPageNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("RightText")
                        .HasColumnType("longtext");

                    b.Property<int>("RowIndex")
                        .HasColumnType("int");

                    b.Property<int>("StartDay")
                        .HasColumnType("int");

                    b.Property<int>("StartMonth")
                        .HasColumnType("int");

                    b.Property<int>("StartYear")
                        .HasColumnType("int");

                    b.Property<Guid>("TargetElementId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Unit")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("UpperLimit")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ElementDetails");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.ModuleElementEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<string>("ActionValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SourceElementId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TargetElementId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("ValueCondition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("ModuleElementEvents");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.MultipleChoiceTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("MultipleChoiceTag");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Site", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxEnrolmentCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Study", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("AskSubjectInitial")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CompanyLogoPath")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("EquivalentStudyId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDemo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLock")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ProtocolCode")
                        .HasColumnType("longtext");

                    b.Property<bool>("ReasonForChange")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ReferenceKey")
                        .HasColumnType("char(36)");

                    b.Property<int>("StudyLanguage")
                        .HasColumnType("int");

                    b.Property<string>("StudyLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StudyLogoPath")
                        .HasColumnType("longtext");

                    b.Property<string>("StudyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StudyState")
                        .HasColumnType("longtext");

                    b.Property<int>("StudyType")
                        .HasColumnType("int");

                    b.Property<string>("SubDescription")
                        .HasColumnType("longtext");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("VersionKey")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("EquivalentStudyId");

                    b.ToTable("Studies");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("AEArchive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AERemove")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Add")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AddAdverseEvent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AddMultiVisit")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("ApproveAudit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ApproveSourceDocuments")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ArchiveMultiVisit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ArchivePatient")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Audit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AutoQueryClosed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanCode")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanFileDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanFileDownload")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanFileUpload")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanFileView")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSeeCycleAuditing")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSeeCycleMonitoring")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSeePatientAuditing")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSeePatientMonitoring")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSeeSiteAuditing")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSeeSiteMonitoring")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("DashboardBuilderAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DashboardBuilderPivotExport")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DashboardBuilderSourceExport")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DashboardView")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleDataAnswerQuery")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleDataCompare")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleDataDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleDataEntry")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleDataQuery")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleDataReport")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleDataViewAll")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EConsentView")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Edit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ExportData")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ExportPatientForm")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasPageFreeze")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasPageUnFreeze")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasPageUnLock")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("InputAuditTrail")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IwrsMarkAsRecieved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IwrsTransfer")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Lock")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("MarkAsNull")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Monitoring")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("MriPage")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("PatientStateChange")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("QueryView")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Randomize")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RemoteSdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RemoveMultiVisit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RemovePatient")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Sdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SeePageActionAudit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Sign")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("StudyFoldersView")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("TmfAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("TmfSiteUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("TmfUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("UploadAuditing")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("UploadMonitoring")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("View")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ViewRandomization")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("StudyRoles");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyRoleModulePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("Freeze")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Lock")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Query")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Read")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SDV")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("StudyRoleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StudyVisitPageModuleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Write")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("StudyRoleId")
                        .IsUnique();

                    b.ToTable("StudyRoleModulePermissions");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("StudyRoleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SuperUserIdList")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.HasIndex("StudyRoleId");

                    b.ToTable("StudyUsers");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyUserSite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StudyUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.HasIndex("StudyUserId");

                    b.ToTable("StudyUserSites");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("CanFreeze")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanLock")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanQuery")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSign")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanVerify")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("ReferenceKey")
                        .HasColumnType("char(36)");

                    b.Property<bool>("SAELockAction")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SAELockHour")
                        .HasColumnType("int");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("VersionKey")
                        .HasColumnType("char(36)");

                    b.Property<int>("VisitType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("StudyVisits");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisitPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("CanFreeze")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanLock")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanQuery")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSign")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanVerify")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("ReferenceKey")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StudyVisitId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("VersionKey")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StudyVisitId");

                    b.ToTable("StudyVisitPages");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisitPageModule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("CanFreeze")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanLock")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanQuery")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSign")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanVerify")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("ReferenceKey")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StudyRoleModulePermissionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StudyVisitPageId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("VersionKey")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StudyRoleModulePermissionId")
                        .IsUnique();

                    b.HasIndex("StudyVisitPageId");

                    b.ToTable("StudyVisitPageModules");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisitPageModuleElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("CanMissing")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ElementName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ElementType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDependent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsTitleHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("StudyVisitPageModuleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<byte>("Width")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("StudyVisitPageModuleId");

                    b.ToTable("StudyVisitPageModuleElements");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisitPageModuleElementDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("ButtonText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("CanComment")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanDataEntry")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanQuery")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanRemoteSdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ColunmIndex")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EProPageNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte>("Layout")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("LowerLimit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Mask")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MetaDataTags")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Options")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ParentElementEProPageNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<int>("RowIndex")
                        .HasColumnType("int");

                    b.Property<Guid>("StudyVisitPageModuleElementId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("UpperLimit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("StudyVisitPageModuleElementId");

                    b.ToTable("StudyVisitPageModuleElementDetails");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisitPageModuleElementEvents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<string>("ActionValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("SourceElementId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StudyVisitPageModuleElementId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TargetElementId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("ValueCondition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudyVisitPageModuleElementId");

                    b.ToTable("StudyVisitPageModuleElementEvents");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("DataStatus")
                        .HasColumnType("int");

                    b.Property<bool>("Freeze")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("InitialName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Lock")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RandomData")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("RandomDataDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Signature")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SubjectNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SubjectStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset?>("UserValueUpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ValidationStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.HasIndex("StudyId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.SubjectVisit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("FormName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FormNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Freeze")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Lock")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ParentSubjectVisitId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Query")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("RelatedSubjectVisitId")
                        .HasColumnType("char(36)");

                    b.Property<int>("RowIndex")
                        .HasColumnType("int");

                    b.Property<bool>("SAELockStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Sdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Signature")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StudyVisitId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Verification")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("StudyVisitId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectVisits");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.SubjectVisitPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("Freeze")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Lock")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Query")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Sdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Sign")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StudyVisitPageId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubjectVisitId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Verification")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("StudyVisitPageId");

                    b.HasIndex("SubjectVisitId");

                    b.ToTable("SubjectVisitPages");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.SubjectVisitPageModule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StudyVisitPageModuleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("SubjectVisitPageId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StudyVisitPageModuleId");

                    b.HasIndex("SubjectVisitPageId");

                    b.ToTable("SubjectVisitPageModules");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.SubjectVisitPageModuleElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("MissingData")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Query")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Sdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ShowOnScreen")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("StudyVisitPageModuleElementId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SubjectVisitModuleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("StudyVisitPageModuleElementId");

                    b.HasIndex("SubjectVisitModuleId");

                    b.ToTable("SubjectVisitPageModuleElements");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.SystemAuditTrail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Changer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClientIp")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("SystemAuditChangeType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("SystemAuditTrails");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Element", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.ElementDetail", "ElementDetail")
                        .WithOne("Element")
                        .HasForeignKey("Helios.Core.Domains.Entities.Element", "ElementDetailId");

                    b.HasOne("Helios.Core.Domains.Entities.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElementDetail");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.ModuleElementEvent", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Site", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Study", "Study")
                        .WithMany("Sites")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Study");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Study", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Study", "EquivalentStudy")
                        .WithMany()
                        .HasForeignKey("EquivalentStudyId");

                    b.Navigation("EquivalentStudy");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyRole", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Study", "Study")
                        .WithMany("StudyRoles")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Study");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyRoleModulePermission", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.StudyRole", "StudyRole")
                        .WithOne("StudyRoleModulePermission")
                        .HasForeignKey("Helios.Core.Domains.Entities.StudyRoleModulePermission", "StudyRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyRole");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyUser", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Study", "Study")
                        .WithMany("StudyUsers")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Helios.Core.Domains.Entities.StudyRole", "StudyRole")
                        .WithMany("StudyUsers")
                        .HasForeignKey("StudyRoleId");

                    b.Navigation("Study");

                    b.Navigation("StudyRole");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyUserSite", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Helios.Core.Domains.Entities.StudyUser", "StudyUser")
                        .WithMany("StudyUserSites")
                        .HasForeignKey("StudyUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");

                    b.Navigation("StudyUser");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisit", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Study", "Study")
                        .WithMany("StudyVisits")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Study");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisitPage", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.StudyVisit", "StudyVisit")
                        .WithMany("StudyVisitPages")
                        .HasForeignKey("StudyVisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyVisit");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisitPageModule", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.StudyRoleModulePermission", "StudyRoleModulePermission")
                        .WithOne("StudyVisitPageModule")
                        .HasForeignKey("Helios.Core.Domains.Entities.StudyVisitPageModule", "StudyRoleModulePermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Helios.Core.Domains.Entities.StudyVisitPage", "StudyVisitPage")
                        .WithMany("StudyVisitPageModules")
                        .HasForeignKey("StudyVisitPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyRoleModulePermission");

                    b.Navigation("StudyVisitPage");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisitPageModuleElement", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.StudyVisitPageModule", "StudyVisitPageModule")
                        .WithMany("StudyVisitPageModuleElements")
                        .HasForeignKey("StudyVisitPageModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyVisitPageModule");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisitPageModuleElementDetail", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.StudyVisitPageModuleElement", "StudyVisitPageModuleElement")
                        .WithMany("StudyVisitPageModuleElementDetails")
                        .HasForeignKey("StudyVisitPageModuleElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyVisitPageModuleElement");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisitPageModuleElementEvents", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.StudyVisitPageModuleElement", "StudyVisitPageModuleElement")
                        .WithMany()
                        .HasForeignKey("StudyVisitPageModuleElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyVisitPageModuleElement");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Subject", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Helios.Core.Domains.Entities.Study", "Study")
                        .WithMany("Subjects")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");

                    b.Navigation("Study");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.SubjectVisit", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.StudyVisit", "StudyVisit")
                        .WithMany()
                        .HasForeignKey("StudyVisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Helios.Core.Domains.Entities.Subject", "Subject")
                        .WithMany("SubjectVisits")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyVisit");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.SubjectVisitPage", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.StudyVisitPage", "StudyVisitPage")
                        .WithMany()
                        .HasForeignKey("StudyVisitPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Helios.Core.Domains.Entities.SubjectVisit", "SubjectVisit")
                        .WithMany("SubjectVisitPages")
                        .HasForeignKey("SubjectVisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyVisitPage");

                    b.Navigation("SubjectVisit");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.SubjectVisitPageModule", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.StudyVisitPageModule", "StudyVisitPageModule")
                        .WithMany()
                        .HasForeignKey("StudyVisitPageModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Helios.Core.Domains.Entities.SubjectVisitPage", null)
                        .WithMany("SubjectVisitPageModules")
                        .HasForeignKey("SubjectVisitPageId");

                    b.Navigation("StudyVisitPageModule");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.SubjectVisitPageModuleElement", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.StudyVisitPageModuleElement", "StudyVisitPageModuleElement")
                        .WithMany()
                        .HasForeignKey("StudyVisitPageModuleElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Helios.Core.Domains.Entities.SubjectVisitPageModule", "SubjectVisitModule")
                        .WithMany("SubjectVisitPageModuleElements")
                        .HasForeignKey("SubjectVisitModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyVisitPageModuleElement");

                    b.Navigation("SubjectVisitModule");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.ElementDetail", b =>
                {
                    b.Navigation("Element")
                        .IsRequired();
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Study", b =>
                {
                    b.Navigation("Sites");

                    b.Navigation("StudyRoles");

                    b.Navigation("StudyUsers");

                    b.Navigation("StudyVisits");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyRole", b =>
                {
                    b.Navigation("StudyRoleModulePermission")
                        .IsRequired();

                    b.Navigation("StudyUsers");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyRoleModulePermission", b =>
                {
                    b.Navigation("StudyVisitPageModule")
                        .IsRequired();
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyUser", b =>
                {
                    b.Navigation("StudyUserSites");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisit", b =>
                {
                    b.Navigation("StudyVisitPages");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisitPage", b =>
                {
                    b.Navigation("StudyVisitPageModules");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisitPageModule", b =>
                {
                    b.Navigation("StudyVisitPageModuleElements");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyVisitPageModuleElement", b =>
                {
                    b.Navigation("StudyVisitPageModuleElementDetails");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Subject", b =>
                {
                    b.Navigation("SubjectVisits");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.SubjectVisit", b =>
                {
                    b.Navigation("SubjectVisitPages");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.SubjectVisitPage", b =>
                {
                    b.Navigation("SubjectVisitPageModules");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.SubjectVisitPageModule", b =>
                {
                    b.Navigation("SubjectVisitPageModuleElements");
                });
#pragma warning restore 612, 618
        }
    }
}
