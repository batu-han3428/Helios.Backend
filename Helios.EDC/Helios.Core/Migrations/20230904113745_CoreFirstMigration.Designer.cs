// <auto-generated />
using System;
using Helios.Core.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Helios.Core.Migrations
{
    [DbContext(typeof(CoreContext))]
    [Migration("20230904113745_CoreFirstMigration")]
    partial class CoreFirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_turkish_ci")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4", DelegationModes.ApplyToAll);

            modelBuilder.Entity("Helios.Core.Domains.Entities.Element", b =>
                {
                    b.Property<Guid>("ElementKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte>("AlignLayout")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("BackColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("Border")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("CustomClass")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DataAttributes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ElementName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ElementType")
                        .HasColumnType("int");

                    b.Property<byte>("FontSize")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("GridLayout")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("GridOffset")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<bool>("IsTitleHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainBorder")
                        .HasColumnType("int");

                    b.Property<string>("MainBorderColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MainBorderStyle")
                        .HasColumnType("int");

                    b.Property<string>("Margin")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Padding")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("TextAlign")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("TextColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("ElementKey");

                    b.HasIndex("ModuleId");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.ElementDetail", b =>
                {
                    b.Property<Guid>("ElementKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ButtonText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("CanInputAuditView")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanMarkAsNull")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanQuery")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanRandomize")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanRemoteSdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanUNKSee")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ColunmIndex")
                        .HasColumnType("int");

                    b.Property<Guid>("CustomCodingTagId")
                        .HasColumnType("char(36)");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("DoubleEntryCanAnswerQuery")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleEntryCanQuery")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EProPageNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("ElementQueryId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("HasDataEntryPermission")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasPdfForm")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsComment")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsMarkedNull")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsQuery")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRemoteSdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsShowOnScreen")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("LabId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LabParamName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("MarkedAsNull")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MedraCoding")
                        .HasColumnType("int");

                    b.Property<string>("MetaDataTags")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MetaDataUID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PageOrder")
                        .HasColumnType("int");

                    b.Property<int>("ParentColumnIndex")
                        .HasColumnType("int");

                    b.Property<int>("ParentElementEProPageNumber")
                        .HasColumnType("int");

                    b.Property<int>("ParentElementType")
                        .HasColumnType("int");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<int>("ParentRowIndex")
                        .HasColumnType("int");

                    b.Property<int>("QueryState")
                        .HasColumnType("int");

                    b.Property<int>("RowIndex")
                        .HasColumnType("int");

                    b.Property<byte>("SdvState")
                        .HasColumnType("tinyint unsigned");

                    b.Property<Guid>("SelectedLabGuid")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StudyVisitModuleId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("ViewRandomize")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("VisitPageId")
                        .HasColumnType("char(36)");

                    b.HasKey("ElementKey");

                    b.ToTable("ElementDetails");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.ModuleElementEvent", b =>
                {
                    b.Property<Guid>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("ActionResult")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<string>("JavascriptCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainJsCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ModuleId1")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SourceElementKey")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TargetElementKey")
                        .HasColumnType("char(36)");

                    b.Property<int>("ValueCondition")
                        .HasColumnType("int");

                    b.HasKey("ModuleId");

                    b.HasIndex("ModuleId1");

                    b.ToTable("ModuleElementEvents");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Site", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxEnrolmentCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Study", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("AskInitial")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyLogoPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("EquivalentStudyId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDemo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ReferansKey")
                        .HasColumnType("char(36)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StudyLogoPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StudyType")
                        .HasColumnType("int");

                    b.Property<string>("SubDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("VersiyonKey")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("EquivalentStudyId");

                    b.ToTable("Studies");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("AEArchive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AERemove")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Add")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AddAdverseEvent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AddMultiVisit")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("ApproveAudit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ApproveSourceDocuments")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ArchiveMultiVisit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ArchivePatient")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Audit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AutoQueryClosed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanCode")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanFileDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanFileDownload")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanFileUpload")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanFileView")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSeeCycleAuditing")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSeeCycleMonitoring")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSeePatientAuditing")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSeePatientMonitoring")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSeeSiteAuditing")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSeeSiteMonitoring")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("DashboardBuilderAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DashboardBuilderPivotExport")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DashboardBuilderSourceExport")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DashboardView")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleDataAnswerQuery")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleDataCompare")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleDataDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleDataEntry")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleDataQuery")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleDataReport")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleDataViewAll")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EConsentView")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Edit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ExportData")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ExportPatientForm")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasPageFreeze")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasPageUnFreeze")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasPageUnLock")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("InputAuditTrail")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IwrsMarkAsRecieved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IwrsTransfer")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Lock")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("MarkAsNull")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Monitoring")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("MriPage")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("PatientStateChange")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("QueryView")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Randomize")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RemoteSdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RemoveMultiVisit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RemovePatient")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Sdv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SeePageActionAudit")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Sign")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("StudyFoldersView")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("TmfAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("TmfSiteUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("TmfUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("UploadAuditing")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("UploadMonitoring")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("View")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ViewRandomization")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("StudyRoles");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyRoleModulePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("Freeze")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Lock")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Query")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Read")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SDV")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Write")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("StudyRoleModulePermissions");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthUserId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("StudyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SuperUserIdList")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StudyId");

                    b.ToTable("StudyUsers");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("StudyRoleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StudyUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StudyRoleId");

                    b.HasIndex("StudyUserId");

                    b.ToTable("StudyUserRoles");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyUserSite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("SiteId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StudyUserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.HasIndex("StudyUserId");

                    b.ToTable("StudyUserSites");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.SystemAuditTrail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Changer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClientIp")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte>("SystemAuditChangeType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("SystemAuditTrails");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Element", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.ModuleElementEvent", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Site", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Study", "Study")
                        .WithMany()
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Study");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.Study", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Study", "EquivalentStudy")
                        .WithMany()
                        .HasForeignKey("EquivalentStudyId");

                    b.Navigation("EquivalentStudy");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyRole", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Study", "Study")
                        .WithMany()
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Study");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyRoleModulePermission", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Study", "Study")
                        .WithMany()
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Study");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyUser", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Study", "Study")
                        .WithMany()
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Study");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyUserRole", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.StudyRole", "StudyRole")
                        .WithMany()
                        .HasForeignKey("StudyRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Helios.Core.Domains.Entities.StudyUser", "StudyUser")
                        .WithMany()
                        .HasForeignKey("StudyUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyRole");

                    b.Navigation("StudyUser");
                });

            modelBuilder.Entity("Helios.Core.Domains.Entities.StudyUserSite", b =>
                {
                    b.HasOne("Helios.Core.Domains.Entities.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Helios.Core.Domains.Entities.StudyUser", "StudyUser")
                        .WithMany()
                        .HasForeignKey("StudyUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");

                    b.Navigation("StudyUser");
                });
#pragma warning restore 612, 618
        }
    }
}
