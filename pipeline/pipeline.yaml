trigger:
  branches:
    include:
      - main

pool:
  name: 'vmssagentspool'



variables:
 
  # Azure Container Registry details
  acrName: 'medcase'
  registry: 'medcase.azurecr.io'
  tag: '$(Build.BuildId)'

  # Kubernetes details
  aksClusterName: 'medcase-cluster-dev'
  kubernetesNamespace: 'helios-testing'  # e.g., production
  azureServiceConnection: 'Medcase-Azure-Cli' 
  dockerRegistryServiceConnection: 'medcase'
steps:
- checkout: self  # This is the correct way to reference the checkout step

- script: |
    echo "Current build id:"
    echo $(tag)
    echo "Checking docker permission:"
    ls -l /var/run/docker.sock
    echo "Docker Status"
    systemctl status docker
    echo "Listing docker images..."
    docker ps
    echo "Listing files..."
    ls -R .
    if [ ! -f "./Helios.sln" ]; then
      echo "Project file not found!"
      exit 1
    fi
     if [ ! -f "./pipeline/build-docker.sh" ]; then
      echo "build-docker.sh file not found!"
      exit 1
    fi
  displayName: 'Verify project file exists'

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- script: dotnet --version
  displayName: 'Check .NET Version'

- script: |
    sudo apt-get update
    sudo apt-get install -y docker.io
  displayName: 'Install Docker'

- script: |
    echo "Installing Azure CLI..."
    sudo apt-get install -y azure-cli
    az --version
  displayName: 'Install Azure CLI'

- task: AzureCLI@2
  inputs:
    azureSubscription: $(azureServiceConnection)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az acr login --name $(registry) --expose-token
      az acr repository list --name $(registry) --output table

- task: Docker@2
  inputs:
    command: login
    containerRegistry: $(dockerRegistryServiceConnection)
  displayName: 'Login to ACR'

- script: |
    sudo docker ps
    chmod +x ./pipeline/build-docker.sh  # Make the script executable
    ./pipeline/build-docker.sh $(registry) 'helios-core' $(tag) './Helios.EDC/Helios.Core/Dockerfile'
  displayName: '[Core Api] Build and Push Docker Image'

- task: Kubernetes@1
  displayName: 'Deploy to AKS'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'Medcase-Azure-Cli'
    azureResourceGroup: 'medcase-cluster'
    kubernetesCluster: '$(aksClusterName)'
    namespace: '$(kubernetesNamespace)'
    command: 'apply'
    useConfigurationFile: false
    arguments: |
      -f deploy/deployment-core.yaml
    secretType: 'None'