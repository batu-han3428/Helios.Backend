trigger:
  branches:
    include:
      - main

pool:
  name: 'vmssagents-pool'



variables:
 
  # Azure Container Registry details
  acrName: 'medcase'
  registry: 'medcase.azurecr.io'
  tag: '$(Build.BuildId)'

  # Kubernetes details
  aksClusterName: 'medcase-cluster-dev'
  kubernetesNamespace: 'helios-testing'  # e.g., production
  azureServiceConnection: 'Medcase-Azure-Cli' 
  dockerRegistryServiceConnection: 'medcase'
steps:
- checkout: self  # This is the correct way to reference the checkout step

- script: |
    sudo usermod -aG docker $(whoami)
    # newgrp docker # Refresh group membership so that the changes take effect
    whoami
    groups
    sudo chown root:docker /var/run/docker.sock
    sudo chmod 660 /var/run/docker.sock
    sudo systemctl restart docker
    docker --version
    sudo docker info
  env:
    cid: $(CLIENTID) 
    cs: $(CLIENTSECRET)
    tt: $(TENANTID)
  displayName: 'Verify Docker Installation'

- script: |
    echo "Installing Azure CLI..."
    apt-get install -y azure-cli
    az --version
  displayName: 'Install Azure CLI'

- script: |
    az --version
  displayName: 'Verify Azure CLI Installation'

- script: |
    az login --service-principal -u $(CLIENTID) -p $(CLIENTSECRET) --tenant $(TENANTID)
  displayName: 'Login Azure CLI'

- script: |
    echo "Listing files..."
    ls -R .
    if [ ! -f "./Helios.sln" ]; then
      echo "Project file not found!"
      exit 1
    fi
     if [ ! -f "./pipeline/build-docker.sh" ]; then
      echo "build-docker.sh file not found!"
      exit 1
    fi
  displayName: 'Verify project file exists'

- script: |
    az acr login --name $(acrName) --expose-token
    docker --version

   docker build -t helios-core:$(tag) -f './Helios.EDC/Helios.Core/Dockerfile' .
    # Tag the image with the registry
    docker tag helios-core:$(tag) medcase.azurecr.io/helios/helios-core:$(tag)

    # Push the image to the Azure Container Registry
    docker push medcase.azurecr.io/helios/helios-core:$(tag)

    # chmod +x ./pipeline/build-docker.sh  # Make the script executable
    # ./pipeline/build-docker.sh 'medcase.azurecr.io/helios' 'helios-core' $(tag) './Helios.EDC/Helios.Core/Dockerfile'
  displayName: '[Core Api] Build and Push Docker Image'

- task: Kubernetes@1
  displayName: 'Deploy to AKS'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'Medcase-Azure-Cli'
    azureResourceGroup: 'medcase-cluster'
    kubernetesCluster: '$(aksClusterName)'
    namespace: '$(kubernetesNamespace)'
    command: 'apply'
    useConfigurationFile: false
    arguments: |
      -f deploy/deployment-core.yaml
    secretType: 'None'