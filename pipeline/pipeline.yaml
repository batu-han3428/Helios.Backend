trigger:
  branches:
    include:
      - main

pool:
  name: 'vmssagents-pool'



variables:
 
  # Azure Container Registry details
  acrName: 'medcase'
  registry: 'medcase.azurecr.io'
  tag: '$(Build.BuildId)'

  # Kubernetes details
  aksClusterName: 'medcase-cluster-dev'
  kubernetesNamespace: 'helios-testing'  # e.g., production
  azureServiceConnection: 'Medcase-Azure-Cli' 
  dockerRegistryServiceConnection: 'medcase'
steps:
- checkout: self  # This is the correct way to reference the checkout step


- script: |
    sudo usermod -aG docker $(whoami)
    newgrp docker
  displayName: 'Add current user to Docker group'

steps:

- script: |
    echo $PATH
    which az
  displayName: 'Check Azure CLI Path'

- script: |
    az --version
  displayName: 'Verify Azure CLI Installation'

- script: |
    az login --service-principal -u ${env:CLIENTID} -p ${env:CLIENTSECRET} --tenant ${env:TENANTID}
  displayName: 'Login Azure CLI'

- script: |
    docker --version
  displayName: 'Verify Docker Installation'

- script: |
    echo "Listing files..."
    ls -R .
    if [ ! -f "./Helios.sln" ]; then
      echo "Project file not found!"
      exit 1
    fi
     if [ ! -f "./pipeline/build-docker.sh" ]; then
      echo "build-docker.sh file not found!"
      exit 1
    fi
  displayName: 'Verify project file exists'


- task: AzureCLI@2
  inputs:
    azureSubscription: $(azureServiceConnection)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      whoami
      az acr login --name $(acrName) --expose-token
      echo "Listing images in ACR..."
      az acr repository list --name $(acrName) --output table


- task: Docker@2
  inputs:
    containerRegistry: 'medcase'
    repository: '/helios/helios-core'
    command: 'buildAndPush'
    Dockerfile: './Helios.EDC/Helios.Core/Dockerfile'
    image: 'helios-core'
    tags: |
      $(tag)

# - script: |
#     az acr login --name $(acrName) --expose-token
#     docker ps
#     chmod +x ./pipeline/build-docker.sh  # Make the script executable
#     ./pipeline/build-docker.sh 'medcase.azurecr.io/helios' 'helios-core' $(tag) './Helios.EDC/Helios.Core/Dockerfile'
#   displayName: '[Core Api] Build and Push Docker Image'



- task: Kubernetes@1
  displayName: 'Deploy to AKS'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'Medcase-Azure-Cli'
    azureResourceGroup: 'medcase-cluster'
    kubernetesCluster: '$(aksClusterName)'
    namespace: '$(kubernetesNamespace)'
    command: 'apply'
    useConfigurationFile: false
    arguments: |
      -f deploy/deployment-core.yaml
    secretType: 'None'